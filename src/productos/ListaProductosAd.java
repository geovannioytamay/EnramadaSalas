/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package productos;

import java.awt.Cursor;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import ventas.CajaAd;

/**
 *
 * @author Rojeru San CL
 */
public class ListaProductosAd extends javax.swing.JInternalFrame {

    int cliks_tabla=0, linea_seleccionado=-1;
    public ListaProductosAd() {
        initComponents();
         OpcionesAl.llenar_combo_caja();
        tablaProductos.getTableHeader().setDefaultRenderer(new principal.EstiloTablaHeader());
        tablaProductos.setDefaultRenderer(Object.class, new principal.EstiloTablaRenderer());
        this.tipoAl.setCursor(new Cursor(12));
        tablaProductos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.setFrameIcon(new ImageIcon(getClass().getResource("/imagenes/Productos/icono.png")));
        OpcionesAl.listar2("");
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);//quitar la barra de titulo
        //tablaProductos.removeColumn(tablaProductos.getColumnModel().getColumn(4));
        // ocultar ña columna de cantidad de la tabala
        tablaProductos.getColumnModel().getColumn(4).setMaxWidth(0);
        tablaProductos.getColumnModel().getColumn(4).setMinWidth(0);
        tablaProductos.getColumnModel().getColumn(4).setPreferredWidth(0);
        tipoAl.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent ie) {
               
                if (tipoAl.getSelectedItem().toString().equals("TODOS")) {
                    tipoL.setIcon(new ImageIcon(getClass().getResource("/imagenes/Productos/tipoAlL.png")));
                    OpcionesAl.listar2("");
                   //  System.out.println(""+tipoAl.getSelectedItem().toString().equals("TODOS"));
                }
                else{
                      OpcionesAl.listar2(tipoAl.getSelectedItem().toString());
                }
               
            }
        });
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new Lib.jtable_modificado2();
        jPanel4 = new javax.swing.JPanel();
        buscar = new app.bolivia.swing.JCTextField();
        codigoL1 = new javax.swing.JLabel();
        tipoAl = new org.bolivia.combo.SComboBoxBlue();
        tipoL = new javax.swing.JLabel();
        enviar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setIconifiable(true);
        setTitle("LISTA DE ALIMENTOS");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "TIPO", "NOMBRE", "PRECIO", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        tablaProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaProductosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "BUSQUEDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscar.setBackground(new java.awt.Color(34, 102, 145));
        buscar.setBorder(null);
        buscar.setForeground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setOpaque(false);
        buscar.setPhColor(new java.awt.Color(255, 255, 255));
        buscar.setPlaceholder("CÓDIGO/NOMBRE");
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
        });
        jPanel4.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 180, -1));

        codigoL1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        codigoL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usuarios/buscarL.png"))); // NOI18N
        jPanel4.add(codigoL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 250, 52));

        tipoAl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tipoAl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoAlActionPerformed(evt);
            }
        });
        jPanel4.add(tipoAl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 183, -1));

        tipoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Productos/tipoAlLmin.png"))); // NOI18N
        jPanel4.add(tipoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 40, 30));

        enviar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Productos/regis1.png"))); // NOI18N
        enviar.setText("Enviar a Caja");
        enviar.setBorder(null);
        enviar.setBorderPainted(false);
        enviar.setContentAreaFilled(false);
        enviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enviar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        enviar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Productos/regis2.png"))); // NOI18N
        enviar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });
        jPanel4.add(enviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 90, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel4.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
        buscar.setText(buscar.getText().toUpperCase());
        OpcionesAl.listar2(buscar.getText());
        esUnico();// para saber si es el unico registro y enviar a caja
    }//GEN-LAST:event_buscarKeyReleased
    void  esUnico(){// verificar si en la tabla es unico
        int  registros  = tablaProductos.getRowCount();
        // System.out.println("unico"+registros);
        if( registros ==1){
             tablaProductos.setRowSelectionInterval(0,0);
             enviar_caja();
             buscar.setText("");
             
              
           //  System.out.println("unico");
        }
           
        
    }
    void enviar_caja(){
        if(disponible(tablaProductos.getSelectedRow()))return ;// si el producto es cero no envia  a caja
        linea_seleccionado=-1;
        if (tablaProductos.getRowCount() > 0) {
            try {
                String cant = "-1";
                DefaultTableModel tabladet = (DefaultTableModel) ventas.CajaAd.tablaCaja.getModel();

                String[] dato = new String[6];

                int fila = tablaProductos.getSelectedRow();
               

                if (fila == -1) {
                    JOptionPane.showMessageDialog(this, "Seleccione un registro.", "Productos", 0,
                            new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                } else {
                    
                    
                    String cod = tablaProductos.getValueAt(fila, 0).toString();
                    String tipo = tablaProductos.getValueAt(fila, 1).toString();
                    String nom = tablaProductos.getValueAt(fila, 2).toString();
                    String precio = tablaProductos.getValueAt(fila, 3).toString();
                    
                    dato[0] = cod;
                    dato[1] = tipo;
                    dato[2] = nom;
                    dato[3] = precio;
                    
                    int c = 0;
                    int j = 0;
                    cant = JOptionPane.showInputDialog(this, "Cantidad:", ""+ nom+": "+precio, JOptionPane.INFORMATION_MESSAGE);
                   // JOptionPane.showInputDialog(rootPane, closable, title, fila, frameIcon, dato, linea_seleccionado)
                            
                    if( cant.equals(""))cant="1";
                    //System.out.println("`rint"+JOptionPane.OPTION_TYPE_PROPERTY;
                    while (!OpcionesAl.isNumber(cant)) {
                        cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numéricos\ny que sean mayor a 0:",
                                "Error", JOptionPane.ERROR_MESSAGE);
                        
                         if(cant.equals(""))cant="1";
                        
                    }
                    if (cant.equals("0")) {
//                        JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                    } else {
                        for (int i = 0; i < ventas.CajaAd.tablaCaja.getRowCount(); i++) {
                            Object id = ventas.CajaAd.tablaCaja.getValueAt(i, 0);
                            Object cant1 = ventas.CajaAd.tablaCaja.getValueAt(i, 4);
                            if (cod.equals(id)) {
                                j = i;
                                
                                int cantT = Integer.parseInt(cant) + Integer.parseInt((String) cant1);
                                int consulta_cant=ventas.OpcionesVen.resta_cantidad(""+id, ""+cantT);
                                if(consulta_cant<0){
                                    int disponible = cantT + consulta_cant- Integer.parseInt((String) cant1);
                                    JOptionPane.showMessageDialog(this, "No hay suficientes productos para agregar."
                                            + " solo puede agregar a lo màs "+disponible+" de este  producto", "Productos", 0,
                                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                                     
                                    return;
                                }
                               
                                //ventas.CajaAd.tablaCaja.setValueAt(String.valueOf(cantT), i, 4);
                                dato[4]=String.valueOf(cantT);
                                tabla(dato, i);
                                ventas.CajaAd.tablaCaja.setRowSelectionInterval(0,0);
                                c++;
                                
                                ventas.CajaAd.total();
                                CajaAd.recibi.setText("");
                                CajaAd.cambio.setText("");
                            }
                        }
                        if (c == 0) {
                            int consulta_cant=ventas.OpcionesVen.resta_cantidad(""+cod, ""+cant);
                            if(consulta_cant<0){
                                int disponible = Integer.parseInt(cant) + consulta_cant;
                                    JOptionPane.showMessageDialog(this, "No hay suficientes productos para agregar."
                                            + " solo puede agregar a lo màs "+disponible+" de este  producto", "Productos", 0,
                                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                                     
                                    return;
                            }
                            
                            dato[4] = cant;
                             
                            
                           
                          
                           //tabladet.addRow(dato);
                           tabla(dato, -1);
                            

                            //ventas.CajaAd.tablaCaja.setModel(tabladet);
                            ventas.CajaAd.total();

                            CajaAd.recibi.setText("");
                            CajaAd.cambio.setText("");
                            ventas.CajaAd.tablaCaja.setRowSelectionInterval(0,0);
                        }
                    }
                }
            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay registros.", "Productos", 0,
                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
        }
        
    }
    
  void tabla(String nuevoDatos[], int index){
      DefaultTableModel modelo = (DefaultTableModel) ventas.CajaAd.tablaCaja.getModel();
      int nuevo=0;
      if(index<0)nuevo=1;
      int filas= modelo.getRowCount();
      String datos[][] = new String[filas+nuevo][6];
      datos[0]=nuevoDatos;
        System.out.println("dato: "+index);
       for(int fil=0;fil<filas;fil++){
           for(int col=0;col<6;col++){
             if(fil!=index)   
             datos[fil+nuevo][col]=ventas.CajaAd.tablaCaja.getValueAt(fil,col).toString();
            
            }
            
       }
      
       while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
            //System.out.println("dato: "+datos[0][0]);
        }
      
       for(int i=0;i<=filas;i++) 
        modelo.addRow(datos[i]);
      
       
       
  }
   
    
    boolean disponible(int fila){
        if(Integer.parseInt(tablaProductos.getValueAt(fila, 4).toString())==0){
            
            JOptionPane.showMessageDialog(this, "imposible enviar a caja. No hay màs productos.", "Productos", 0,
                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
            
            return true;
        }
        return false;
    }
    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        enviar_caja();
    }//GEN-LAST:event_enviarActionPerformed

    private void tablaProductosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaProductosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaProductosKeyPressed

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
  
               cliks_tabla++;
               System.out.println(""+tablaProductos.getSelectedRow());
               if(tablaProductos.getSelectedRow()==linea_seleccionado){
                   
                    if (cliks_tabla==2  ) {
                      enviar_caja();                      
                    }
               }
                else{
                linea_seleccionado=tablaProductos.getSelectedRow();
                cliks_tabla=1;
                }
                  // TODO add your handling code here:
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void tipoAlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoAlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoAlActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private app.bolivia.swing.JCTextField buscar;
    private javax.swing.JLabel codigoL1;
    private javax.swing.JButton enviar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tablaProductos;
    public static org.bolivia.combo.SComboBoxBlue tipoAl;
    private javax.swing.JLabel tipoL;
    // End of variables declaration//GEN-END:variables
}
